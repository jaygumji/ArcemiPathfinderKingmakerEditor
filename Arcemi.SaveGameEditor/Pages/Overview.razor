@page "/Overview"
@inject IEditFileSession Session
@inject NavigationManager NavManager
@inject StateManager State

@if (!Session.CanEdit) {
    <p><em>Save file not loaded.</em></p>
}
else {
<p class="alert alert-info">The editor automatically backups any replaced files during save.
    If there are any backup file for the opened file, the "Open backup" button will be enabled.</p>

<fieldset class="form-controller" disabled="@State.IsBusy">

<div class="row g-3">
    <div class="col-sm-6 col-md-4 col-lg-3">
        <button class="btn btn-sm btn-info w-100" disabled="@(!Session.CanEdit)" @onclick="ReplaceFile">
            <span class="oi oi-data-transfer-download"></span>
            Save
        </button>
    </div>
    <div class="col-sm-6 col-md-4 col-lg-3">
        <button class="btn btn-sm btn-info w-100" title="Reloads the save file" @onclick="ReloadFile">
            <span class="oi oi-action-undo"></span>
            Reload
        </button>
    </div>
    <div class="col-sm-6 col-md-4 col-lg-3">
        <button class="btn btn-sm btn-info w-100" disabled="@(!(Session.Location?.BackupExists ?? false))" title="Open backup file for this save" @onclick="OpenBackupFile">
            <span class="oi oi-action-undo"></span>
            Open backup
        </button>
    </div>
</div>
<div class="row g-3">
    <div class="col-md-12">
        <label class="form-label">Path</label>
        <input class="form-control" type="text" readonly="readonly" value="@Session.Location?.FilePath" />
    </div>
</div>
<div class="row g-3">
    @foreach (var resource in Session.Game.Party.Resources){
        <div class="@(resource.IsSmall ? "col-md-2" : "col-md-4")">
            <label class="form-label">@resource.Name</label>
            <input class="form-control" type="number" readonly="@resource.IsReadOnly" @bind="resource.Value" />
        </div>
    }
</div>
<div class="row g-3">
    <h4 class="col-md-12">Game Time</h4>
</div>
<div class="row g-3">
    <div class="col-md-2">
        <label class="form-label">Days</label>
        <input class="form-control" type="text" @bind="Session.Player.GameTimeParts.Days" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Hours</label>
        <input class="form-control" type="text" @bind="Session.Player.GameTimeParts.Hours" />
    </div>
    <div class="col-md-2">
        <label class="form-label">Minutes</label>
        <input class="form-control" type="text" @bind="Session.Player.GameTimeParts.Minutes" />
    </div>
</div>

<div class="row g-3">
    <h3 class="col-md-12">Game Settings</h3>
</div>
@if (Session.Game is Arcemi.Models.PathfinderWotr.WotrGameAccessor){
    <div class="row g-3">
        <div class="col-md-12">
            <p class="alert alert-warning">
                Changing the auto crusade option should be done before crusade is enabled in game.
            </p>
        </div>
    </div>
    <div class="row g-3">
        <div class="col-md-3">
            <Switch @bind-IsChecked="OptionAutoCrusade">
                <Label>Auto Crusade</Label>
            </Switch>
        </div>
    </div>
}

</fieldset>
}

@code {
    private bool OptionAutoCrusade
    {
        get => Session.Player.SettingsList.AutoCrusade;
        set {
            Session.Player.SettingsList.AutoCrusade = value;
            Session.Player.SettingsList.AutoCrusadeWasTouched = false;
        }
    }

    private async Task ReplaceFile()
    {
        await State.ExecuteAsync(() => Session.Save(Session.Location.Refresh()));
    }

    private async Task ReloadFile()
    {
        await State.ExecuteAsync(() => Session.Open(Session.Location.FilePath));
    }

    private async Task OpenBackupFile()
    {
        await State.ExecuteAsync(() => Session.OpenBackup(Session.Location));
    }

}
