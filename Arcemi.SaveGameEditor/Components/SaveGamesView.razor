@inject EditorConfiguration Config
@inject IEditFileSession Session

<TabControl OnIndexChanged="OnTabIndexChangedAsync" StartIndex="TabIndex">
    @foreach (var game in Games) {
        <Tab Name="@game.Definition.Name">
            <Content>
                @if (game.Definition.IsReadingGameFolder && !game.Config.ValidateGameFolder()) {
                    <p class="alert alert-warning">
                        Game folder is not configured in settings, enhanced UI has been disabled.
                        Set the game folder in the settings to enable the enhanced UI for a better experience.
                    </p>
                }
                <AccordionContainer>
                    @{ var index = 0; }
                    @foreach (var saveGroup in game.SaveGroups) {
                        <Accordion HeaderText="@saveGroup.PlayerCharacterName" StartAsExpanded="index == 0" Layout="AccordionLayout.Barebone">
                            @foreach (var header in saveGroup.Headers) {
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="card">
                                            <div class="card-body">
                                                <h5 class="card-title">@header.Header.Name</h5>
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        <p class="card-text">@game.Definition.Resources.Blueprints.GetNameOrBlueprint(header.Header.Area)</p>
                                                    </div>
                                                    <div class="col-md-5">
                                                        <p class="card-text">Game time: @header.Header.GameSaveTime.AsDisplayableDayHourMinute()</p>
                                                        <p class="card-text">Real time: @header.Header.GameTotalTime.AsDisplayableDayHourMinute()</p>
                                                    </div>
                                                    <div class="col-md-3">
                                                        @SaveFileToolbar(header)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </Accordion>
                        index++;
                    }
                </AccordionContainer>
            </Content>
        </Tab>
    }
</TabControl>

@code {
    [Parameter]
    public RenderFragment<SaveFileHeader> SaveFileToolbar { get; set; }

    [Parameter]
    public GameDefinition GameMustBe { get; set; }

    private IReadOnlyList<GamesForSavedGamesView> Games { get; set; }
    private int TabIndex { get; set; }

    protected override void OnInitialized()
    {
        Games = GamesForSavedGamesView.Create(Config);
        if (Games.Count == 0) return;
        if (GameMustBe is object) {
            Games = Games.Where(g => g.Definition == GameMustBe).ToArray();
        }
        else if (Config.Instance.LastGameDefinitionId.HasValue()) {
            TabIndex = 0;
            for (var i = 0; i < Games.Count; i++) {
                if (Games[i].Definition.Id.Eq(Config.Instance.LastGameDefinitionId)) {
                    TabIndex = i;
                    break;
                }
            }
        }
    }

    private Task OnTabIndexChangedAsync(TabIndexChangedArgs args)
    {
        if (Games.Count <= args.NewIndex || args.NewIndex < 0) return Task.CompletedTask;
        Config.Instance.LastGameDefinitionId = Games[args.NewIndex].Definition.Id;
        Config.Save();
        return Task.CompletedTask;
    }
}
