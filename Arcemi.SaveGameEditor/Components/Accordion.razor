<div class="accordion-item">
    <div class="accordion-header @(IsExpanded ? "" : "collapsed") w-100" @onclick:stopPropagation="true" @onclick="() => ToggleExpansion()">
        <h4>@HeaderText</h4>
        <div class="accordion-toolbar">
            @if (IsRemoveEnabled && OnRemove is object) {
                <button class="btn btn-sm btn-danger" @onclick:stopPropagation="true" @onclick="() => OnRemoveClicked()">
                    <span class="oi oi-trash"></span>
                </button>
            }
        </div>
    </div>
    <div class="accordion-collapse collapse @(IsExpanded ? "show" : "")">
        <div class="accordion-body">
            @if (Layout == AccordionLayout.Single) {
                <div class="row">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                @ChildContent
                            </div>
                        </div>
                    </div>
                </div>
            }
            else {
                @ChildContent
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string HeaderText { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public bool IsRemoveEnabled { get; set; }

    [Parameter]
    public Action OnRemove { get; set; }

    [Parameter]
    public bool StartAsExpanded { get; set; }

    [Parameter]
    public AccordionLayout Layout { get; set; } = AccordionLayout.Single;

    public bool IsExpanded { get; set; }

    public void ToggleExpansion()
    {
        IsExpanded = !IsExpanded;
    }

    protected override void OnInitialized()
    {
        IsExpanded = StartAsExpanded;
    }

    private void OnRemoveClicked()
    {
        OnRemove?.Invoke();
    }
}
