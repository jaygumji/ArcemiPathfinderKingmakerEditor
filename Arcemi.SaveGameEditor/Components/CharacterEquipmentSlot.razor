@inject IGameResourcesProvider Resources

<div class="character-equipment-slot">
    <div class="row">
        <div class="col-md-2 item-icon">
            <img src="@(Item is object ? ItemEntry.IconUrl : ItemType.GetIconUrl())" alt="@(Item is object ? Item.DisplayName(Resources) : ItemType.DisplayName)" />
        </div>
        <div class="col-md-10">
            <div class="data-header">
                <div class="row">
                    <div class="col-md-8">
                        <label class="form-label">@Name</label>
                    </div>
                    <div class="col-md-4">
                        @if (Item is object) {
                            <button class="btn btn-sm btn-secondary" title="Copy blueprint" @onclick="() => CopyBlueprintIdentifier(Item)">
                                <span class="oi oi-paperclip"></span>
                            </button>
                            @if (ItemEntry.CanEdit) {
                                <button class="btn btn-sm btn-secondary" title="Edit item" @onclick="() => Callback?.Invoke(this, new CharacterEquipmentSlotItemExecuteArgs(Item, isEdit: true))">
                                    <span class="oi oi-pencil"></span>
                                </button>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="data-content">
                @ItemName
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Name { get; set; }

    [Parameter]
    public HoldingSlotModel HoldingSlot { get; set; }

    [Parameter]
    public UnitEntityModel Unit { get; set; }

    [Parameter]
    public BlueprintTypeId ItemTypeId { get; set; }

    private BlueprintType _ItemType;
    public BlueprintType ItemType => _ItemType ?? (_ItemType = Resources.Blueprints.TypeProvider.Get(ItemTypeId));

    private Arcemi.Models.PathfinderWotr.WotrGameItemEntry _ItemEntry;
    public IGameItemEntry ItemEntry => _ItemEntry ?? (_ItemEntry = new Arcemi.Models.PathfinderWotr.WotrGameItemEntry(Item));

    [Parameter]
    public Func<CharacterEquipmentSlot, CharacterEquipmentSlotItemExecuteArgs, Task> Callback { get; set; }

    private ItemModel Item
    {
        get {
            if (HoldingSlot is null) return null;
            if (HoldingSlot.Item is object) return HoldingSlot.Item;
            if (HoldingSlot.ItemRef.HasValue()) {
                if (Unit is null) return null;
                return Unit.Descriptor.Inventory.Items.FirstOrDefault(i => i.UniqueId.Eq(HoldingSlot.ItemRef));
            }
            return null;
        }
    }

    private string ItemName => (Item?.DisplayName(Resources)) ?? "-";

    private void CopyBlueprintIdentifier(ItemModel i)
    {
        ElectronNET.API.Electron.Clipboard.WriteText(i.Blueprint);
    }
}